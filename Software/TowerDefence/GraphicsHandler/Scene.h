#pragma once
#include <SFML/Graphics.hpp>
#include "Map.hpp"
/*
class Map {					//zaœlepka
public: 
	int GetSquare(int x, int y) const {
		return tab[x][y];
	}
	int tab[20][20] = { 
	{ 2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
	{ 1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
	{ 0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
	{ 0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
	{ 0,0,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
	{ 0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0 },
	{ 0,0,0,0,0,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0 },
	{ 0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0 },
	{ 0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0 },
	{ 0,0,0,0,0,1,0,0,2,0,0,0,0,0,0,0,0,0,0,0 },
	{ 0,0,0,0,0,1,0,0,0,1,1,1,1,1,1,1,1,0,0,0 },
	{ 0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,1,0,0,0 },
	{ 0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,1,0,0,0 },
	{ 0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,1,0,0,0 },
	{ 0,0,0,0,0,1,0,0,2,1,0,0,0,0,0,2,1,0,0,0 },
	{ 0,0,0,0,0,1,1,1,1,1,0,0,0,0,1,1,1,0,0,0 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,0,0,0,0 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1 },
	{ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1 } };
};
*/
class Scene : public sf::Drawable, public sf::Transformable
{
public:
	Scene();
	void load(const Map& map);
	virtual ~Scene();
private:
	virtual void draw(sf::RenderTarget& target, sf::RenderStates states) const;

	sf::VertexArray squareArray;
};

